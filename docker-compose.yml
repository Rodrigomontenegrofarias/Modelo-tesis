version: "3"
# Definir servicios
services:
  mysql:                     # Container para la base de datos.
    build:                   # Instrucciones para crear imagen
      context: ./sql         # Dontexto actual
      dockerfile: Dockerfile # Nombre Dockerfile
    restart: always
    mem_limit: 800m
    cpus: 0.5  # Limita la uso de CPU al 50%
    ports:
     - ${MYSQL_ROOT_PORT} # Nombre de la red asignad
    environment:           # Variables de entorno
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    container_name: mysql # Nomnbre del container
  myapp:                  # Container para el myapp2
    build:                # Instrucciones para crear imagen
      context: .          # Dontexto actual
      dockerfile: Dockerfile # Nombre Dockerfile
    restart: always       # Indica que el container se reinicie siempre.
    ports:
     - ${JUPYTER_PORT}   # Varibale de la red asignada Port
    networks:             # Asignar una red al container
     - red_proxy          # Nombre de la red asignada
     - red_privada        # Nombre de la red asignada
    depends_on:
     - mysql
    environment:
      VIRTUAL_HOST: ${MYSQL_ROOT_HOST}# DNS asignado al container
    mem_limit: 3100m
    cpus: 0.95  # Limita la uso de CPU al 50%
  # servicio de proxy entre contenedores
  nginx-proxy:
    # comando para configurar Nginx
    command: "sh -c 'echo \"server_tokens off; proxy_connect_timeout 300; proxy_send_timeout 300; proxy_read_timeout 90m; send_timeout 300;client_max_body_size 1024M;\" > /etc/nginx/conf.d/my_proxy.conf; forego start -r'"
    restart: always               # reiniciar siempre
    image: jwilder/nginx-proxy    # imagen desde docker HUB
    container_name: nginx-proxy   # nombre del contenedor
    ports:                        # Asignacion del puerto 80 al proxy
     - "80:80"
     - "443:443"
    volumes:                      # Entrega informaci√≥n de de Docker 
     - /var/run/docker.sock:/tmp/docker.sock:ro
# Nombre de los volumenes son data, data1, data2, ... ,dataN segun corresponda
volumes:                   # Defenir volumenes
  data:                    # Nombre del volumen asignado al proyecto
# El nombre de las redes no cambia (red_proxy y red_privada son estandar)
networks:   
  default:
    external:
      name: nginx-proxy    # Definir redes
  red_proxy:               # Nombre de una red
    external:              # Indica que es una red externa al docker-compose
      name: nginx-proxy    # Nombre de la Red de uso publico entre Docker
  red_privada:             # Nombre de una red que depende del docker-compose


